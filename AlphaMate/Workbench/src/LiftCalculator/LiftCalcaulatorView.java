/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LiftCalculator;

import Listeners.EMeasureListener;
import Listeners.FluidListener;
import Models.EMeasure;
import Models.Fluid;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;

/**
 *
 * @author frascog
 */
public class LiftCalcaulatorView extends JPanel implements LiftListener,EMeasureListener,FluidListener {

    private LiftController controller;
    private boolean initDone;

    public LiftCalcaulatorView(LiftController controller) {
        this.controller = controller;
        initComponents();
        initMyComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        jSplitPane1.setDividerLocation(500);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LiftCalcaulatorView.class, "LiftCalcaulatorView.jLabel1.text")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 183, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 107, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, 0, 421, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (initDone) {
            controller.setShape((Shape) jComboBox1.getSelectedItem());
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables

    private void initMyComponents() {
        initDone = false;
        jComboBox1.setModel(new DefaultComboBoxModel(Shape.values()));
        jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));
        controller.getRadiusController().getListeners().add(this);
        controller.getDiameterController().getListeners().add(this);
        controller.getLengthController().getListeners().add(this);
        controller.getWidthController().getListeners().add(this);
        controller.getHeightController().getListeners().add(this);
        controller.getVolumeController().getListeners().add(this);
        controller.getFluidController().getListeners().add(this);
        
        jPanel4.add(this.controller.getRadiusController().getEMeasureBasicView());
        jPanel4.add(this.controller.getDiameterController().getEMeasureBasicView());
        jPanel4.add(this.controller.getLengthController().getEMeasureBasicView());
        jPanel4.add(this.controller.getWidthController().getEMeasureBasicView());
        jPanel4.add(this.controller.getHeightController().getEMeasureBasicView());
        jPanel5.setLayout(new BoxLayout(jPanel5, BoxLayout.Y_AXIS));
        jPanel5.add(this.controller.getSurfaceAeraController().getEMeasureBasicView());
        jPanel5.add(this.controller.getVolumeController().getEMeasureBasicView());
        jPanel5.add(this.controller.getWieghtController().getEMeasureBasicView());
        jPanel7.setLayout(new BoxLayout(jPanel7, BoxLayout.Y_AXIS));
        jPanel7.add(this.controller.getFluidController().getFluidBasicView());
        LiftCalcualtorChangeResponce(null);
    }

    @Override
    public void LiftCalcualtorChangeResponce(EMeasure e) {
        initDone = false;
        jComboBox1.setSelectedItem(controller.getShape());
        switch (controller.getShape()) {
            case Cube:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(false);
                break;
            case Cuboid:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(true);
                break;
            case Cylinder:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(true);
                break;
            case Sphere:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(false);
                break;
            case Capsule:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(false);
                break;
            case Spherical_Cap:
                this.controller.getRadiusController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getDiameterController().getEMeasureBasicView(0).setVisible(true);
                this.controller.getLengthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getWidthController().getEMeasureBasicView(0).setVisible(false);
                this.controller.getHeightController().getEMeasureBasicView(0).setVisible(true);
                break;
        }
        controller.calculate(e);
        initDone = true;
    }

    @Override
    public void EMeasureChangeResponce(EMeasure e) {
        this.LiftCalcualtorChangeResponce(e);
    }

    @Override
    public void FluidChangeResponce(Fluid f) {
        this.LiftCalcualtorChangeResponce(null);
    }
    
    
}
